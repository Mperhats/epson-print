/* tslint:disable */
/* eslint-disable */
/**
 * NOSH-API
 * NOSH Backend API
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { UserSessionMerchantDto } from './UserSessionMerchantDto';
import {
  UserSessionMerchantDtoFromJSON,
  UserSessionMerchantDtoFromJSONTyped,
  UserSessionMerchantDtoToJSON,
} from './UserSessionMerchantDto';

/**
 *
 * @export
 * @interface UserInfoMerchantDto
 */
export interface UserInfoMerchantDto {
  /**
   *
   * @type {string}
   * @memberof UserInfoMerchantDto
   */
  id: string;
  /**
   *
   * @type {Array<string>}
   * @memberof UserInfoMerchantDto
   */
  role: Array<UserInfoMerchantDtoRoleEnum>;
  /**
   *
   * @type {string}
   * @memberof UserInfoMerchantDto
   */
  email: string | null;
  /**
   *
   * @type {string}
   * @memberof UserInfoMerchantDto
   */
  merchantManagerId: string | null;
  /**
   *
   * @type {string}
   * @memberof UserInfoMerchantDto
   */
  merchantGroupAdminId: string | null;
  /**
   *
   * @type {UserSessionMerchantDto}
   * @memberof UserInfoMerchantDto
   */
  session: UserSessionMerchantDto;
}

/**
 * @export
 */
export const UserInfoMerchantDtoRoleEnum = {
  Admin: 'ADMIN',
  Customer: 'CUSTOMER',
  MerchantLocationManager: 'MERCHANT_LOCATION_MANAGER',
  MerchantGroupAdmin: 'MERCHANT_GROUP_ADMIN',
} as const;
export type UserInfoMerchantDtoRoleEnum =
  (typeof UserInfoMerchantDtoRoleEnum)[keyof typeof UserInfoMerchantDtoRoleEnum];

/**
 * Check if a given object implements the UserInfoMerchantDto interface.
 */
export function instanceOfUserInfoMerchantDto(value: object): boolean {
  let isInstance = true;
  isInstance = isInstance && 'id' in value;
  isInstance = isInstance && 'role' in value;
  isInstance = isInstance && 'email' in value;
  isInstance = isInstance && 'merchantManagerId' in value;
  isInstance = isInstance && 'merchantGroupAdminId' in value;
  isInstance = isInstance && 'session' in value;

  return isInstance;
}

export function UserInfoMerchantDtoFromJSON(json: any): UserInfoMerchantDto {
  return UserInfoMerchantDtoFromJSONTyped(json, false);
}

export function UserInfoMerchantDtoFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): UserInfoMerchantDto {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    id: json['id'],
    role: json['role'],
    email: json['email'],
    merchantManagerId: json['merchantManagerId'],
    merchantGroupAdminId: json['merchantGroupAdminId'],
    session: UserSessionMerchantDtoFromJSON(json['session']),
  };
}

export function UserInfoMerchantDtoToJSON(value?: UserInfoMerchantDto | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    id: value.id,
    role: value.role,
    email: value.email,
    merchantManagerId: value.merchantManagerId,
    merchantGroupAdminId: value.merchantGroupAdminId,
    session: UserSessionMerchantDtoToJSON(value.session),
  };
}
