/* tslint:disable */
/* eslint-disable */
/**
 * NOSH-API
 * NOSH Backend API
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 *
 * @export
 * @interface CartFeeMerchantDto
 */
export interface CartFeeMerchantDto {
  /**
   *
   * @type {string}
   * @memberof CartFeeMerchantDto
   */
  id: CartFeeMerchantDtoIdEnum;
  /**
   *
   * @type {string}
   * @memberof CartFeeMerchantDto
   */
  category: CartFeeMerchantDtoCategoryEnum;
  /**
   *
   * @type {string}
   * @memberof CartFeeMerchantDto
   */
  title: string;
  /**
   *
   * @type {string}
   * @memberof CartFeeMerchantDto
   */
  description: string;
  /**
   *
   * @type {number}
   * @memberof CartFeeMerchantDto
   */
  amount: number;
}

/**
 * @export
 */
export const CartFeeMerchantDtoIdEnum = {
  Tax: 'TAX',
  ServiceFeePercentageRate: 'SERVICE_FEE_PERCENTAGE_RATE',
  ServiceFeeMinimumFixed: 'SERVICE_FEE_MINIMUM_FIXED',
  ServiceFeeMaximumFixed: 'SERVICE_FEE_MAXIMUM_FIXED',
  StripeFeePercentageComponent: 'STRIPE_FEE_PERCENTAGE_COMPONENT',
  StripeFeeFixedComponent: 'STRIPE_FEE_FIXED_COMPONENT',
  PickupCommision: 'PICKUP_COMMISION',
  DeliveryCommision: 'DELIVERY_COMMISION',
  CourierDeliveryFee: 'COURIER_DELIVERY_FEE',
  DeliveryPlatformFixedCharge: 'DELIVERY_PLATFORM_FIXED_CHARGE',
  CourierTipPercentageRate: 'COURIER_TIP_PERCENTAGE_RATE',
  CourierTipFixedAmount: 'COURIER_TIP_FIXED_AMOUNT',
  ColoradoDeliveryFee: 'COLORADO_DELIVERY_FEE',
} as const;
export type CartFeeMerchantDtoIdEnum =
  (typeof CartFeeMerchantDtoIdEnum)[keyof typeof CartFeeMerchantDtoIdEnum];

/**
 * @export
 */
export const CartFeeMerchantDtoCategoryEnum = {
  Tax: 'TAX',
  Discount: 'DISCOUNT',
  PlatformFee: 'PLATFORM_FEE',
  Delivery: 'DELIVERY',
  Tip: 'TIP',
  Commision: 'COMMISION',
  PaymentProcessing: 'PAYMENT_PROCESSING',
  RegionalFee: 'REGIONAL_FEE',
} as const;
export type CartFeeMerchantDtoCategoryEnum =
  (typeof CartFeeMerchantDtoCategoryEnum)[keyof typeof CartFeeMerchantDtoCategoryEnum];

/**
 * Check if a given object implements the CartFeeMerchantDto interface.
 */
export function instanceOfCartFeeMerchantDto(value: object): boolean {
  let isInstance = true;
  isInstance = isInstance && 'id' in value;
  isInstance = isInstance && 'category' in value;
  isInstance = isInstance && 'title' in value;
  isInstance = isInstance && 'description' in value;
  isInstance = isInstance && 'amount' in value;

  return isInstance;
}

export function CartFeeMerchantDtoFromJSON(json: any): CartFeeMerchantDto {
  return CartFeeMerchantDtoFromJSONTyped(json, false);
}

export function CartFeeMerchantDtoFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): CartFeeMerchantDto {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    id: json['id'],
    category: json['category'],
    title: json['title'],
    description: json['description'],
    amount: json['amount'],
  };
}

export function CartFeeMerchantDtoToJSON(value?: CartFeeMerchantDto | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    id: value.id,
    category: value.category,
    title: value.title,
    description: value.description,
    amount: value.amount,
  };
}
