/* tslint:disable */
/* eslint-disable */
/**
 * NOSH-API
 * NOSH Backend API
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ContentSectionDto } from './ContentSectionDto';
import {
  ContentSectionDtoFromJSON,
  ContentSectionDtoFromJSONTyped,
  ContentSectionDtoToJSON,
} from './ContentSectionDto';

/**
 *
 * @export
 * @interface OrderSummaryItemMerchantDto
 */
export interface OrderSummaryItemMerchantDto {
  /**
   *
   * @type {string}
   * @memberof OrderSummaryItemMerchantDto
   */
  id: OrderSummaryItemMerchantDtoIdEnum;
  /**
   *
   * @type {string}
   * @memberof OrderSummaryItemMerchantDto
   */
  title: string;
  /**
   *
   * @type {string}
   * @memberof OrderSummaryItemMerchantDto
   */
  description?: string;
  /**
   *
   * @type {Array<ContentSectionDto>}
   * @memberof OrderSummaryItemMerchantDto
   */
  content?: Array<ContentSectionDto>;
  /**
   *
   * @type {number}
   * @memberof OrderSummaryItemMerchantDto
   */
  amountBeforeDiscount?: number;
  /**
   *
   * @type {number}
   * @memberof OrderSummaryItemMerchantDto
   */
  amount: number;
}

/**
 * @export
 */
export const OrderSummaryItemMerchantDtoIdEnum = {
  Subtotal: 'SUBTOTAL',
  Commission: 'COMMISSION',
  PaymentProcessingFee: 'PAYMENT_PROCESSING_FEE',
  Promotion: 'PROMOTION',
  MerchantPayout: 'MERCHANT_PAYOUT',
} as const;
export type OrderSummaryItemMerchantDtoIdEnum =
  (typeof OrderSummaryItemMerchantDtoIdEnum)[keyof typeof OrderSummaryItemMerchantDtoIdEnum];

/**
 * Check if a given object implements the OrderSummaryItemMerchantDto interface.
 */
export function instanceOfOrderSummaryItemMerchantDto(value: object): boolean {
  let isInstance = true;
  isInstance = isInstance && 'id' in value;
  isInstance = isInstance && 'title' in value;
  isInstance = isInstance && 'amount' in value;

  return isInstance;
}

export function OrderSummaryItemMerchantDtoFromJSON(json: any): OrderSummaryItemMerchantDto {
  return OrderSummaryItemMerchantDtoFromJSONTyped(json, false);
}

export function OrderSummaryItemMerchantDtoFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): OrderSummaryItemMerchantDto {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    id: json['id'],
    title: json['title'],
    description: !exists(json, 'description') ? undefined : json['description'],
    content: !exists(json, 'content')
      ? undefined
      : (json['content'] as Array<any>).map(ContentSectionDtoFromJSON),
    amountBeforeDiscount: !exists(json, 'amountBeforeDiscount')
      ? undefined
      : json['amountBeforeDiscount'],
    amount: json['amount'],
  };
}

export function OrderSummaryItemMerchantDtoToJSON(value?: OrderSummaryItemMerchantDto | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    id: value.id,
    title: value.title,
    description: value.description,
    content:
      value.content === undefined
        ? undefined
        : (value.content as Array<any>).map(ContentSectionDtoToJSON),
    amountBeforeDiscount: value.amountBeforeDiscount,
    amount: value.amount,
  };
}
