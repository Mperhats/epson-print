/* tslint:disable */
/* eslint-disable */
/**
 * NOSH-API
 * NOSH Backend API
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CustomerAddressMerchantDto } from './CustomerAddressMerchantDto';
import {
  CustomerAddressMerchantDtoFromJSON,
  CustomerAddressMerchantDtoFromJSONTyped,
  CustomerAddressMerchantDtoToJSON,
} from './CustomerAddressMerchantDto';
import type { UserMerchantDto } from './UserMerchantDto';
import {
  UserMerchantDtoFromJSON,
  UserMerchantDtoFromJSONTyped,
  UserMerchantDtoToJSON,
} from './UserMerchantDto';

/**
 *
 * @export
 * @interface CustomerMerchantDto
 */
export interface CustomerMerchantDto {
  /**
   *
   * @type {string}
   * @memberof CustomerMerchantDto
   */
  id: string;
  /**
   *
   * @type {string}
   * @memberof CustomerMerchantDto
   */
  cellPhone: string | null;
  /**
   *
   * @type {Array<CustomerAddressMerchantDto>}
   * @memberof CustomerMerchantDto
   */
  addresses?: Array<CustomerAddressMerchantDto>;
  /**
   *
   * @type {string}
   * @memberof CustomerMerchantDto
   */
  defaultAddressId?: string | null;
  /**
   *
   * @type {UserMerchantDto}
   * @memberof CustomerMerchantDto
   */
  user?: UserMerchantDto;
  /**
   *
   * @type {string}
   * @memberof CustomerMerchantDto
   */
  firstName: string | null;
  /**
   *
   * @type {string}
   * @memberof CustomerMerchantDto
   */
  lastName: string | null;
  /**
   *
   * @type {string}
   * @memberof CustomerMerchantDto
   */
  middleName: string | null;
}

/**
 * Check if a given object implements the CustomerMerchantDto interface.
 */
export function instanceOfCustomerMerchantDto(value: object): boolean {
  let isInstance = true;
  isInstance = isInstance && 'id' in value;
  isInstance = isInstance && 'cellPhone' in value;
  isInstance = isInstance && 'firstName' in value;
  isInstance = isInstance && 'lastName' in value;
  isInstance = isInstance && 'middleName' in value;

  return isInstance;
}

export function CustomerMerchantDtoFromJSON(json: any): CustomerMerchantDto {
  return CustomerMerchantDtoFromJSONTyped(json, false);
}

export function CustomerMerchantDtoFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): CustomerMerchantDto {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    id: json['id'],
    cellPhone: json['cellPhone'],
    addresses: !exists(json, 'addresses')
      ? undefined
      : (json['addresses'] as Array<any>).map(CustomerAddressMerchantDtoFromJSON),
    defaultAddressId: !exists(json, 'defaultAddressId') ? undefined : json['defaultAddressId'],
    user: !exists(json, 'user') ? undefined : UserMerchantDtoFromJSON(json['user']),
    firstName: json['firstName'],
    lastName: json['lastName'],
    middleName: json['middleName'],
  };
}

export function CustomerMerchantDtoToJSON(value?: CustomerMerchantDto | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    id: value.id,
    cellPhone: value.cellPhone,
    addresses:
      value.addresses === undefined
        ? undefined
        : (value.addresses as Array<any>).map(CustomerAddressMerchantDtoToJSON),
    defaultAddressId: value.defaultAddressId,
    user: UserMerchantDtoToJSON(value.user),
    firstName: value.firstName,
    lastName: value.lastName,
    middleName: value.middleName,
  };
}
