/* tslint:disable */
/* eslint-disable */
/**
 * NOSH-API
 * NOSH Backend API
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 *
 * @export
 * @interface MerchantUpdateMerchantInput
 */
export interface MerchantUpdateMerchantInput {
  /**
   *
   * @type {number}
   * @memberof MerchantUpdateMerchantInput
   */
  prepareTimeEstimateMinutes?: number;
  /**
   *
   * @type {boolean}
   * @memberof MerchantUpdateMerchantInput
   */
  autoAcceptsTabletOrders?: boolean;
  /**
   *
   * @type {string}
   * @memberof MerchantUpdateMerchantInput
   */
  email?: string;
  /**
   *
   * @type {boolean}
   * @memberof MerchantUpdateMerchantInput
   */
  sendNewOrderEmail?: boolean;
}

/**
 * Check if a given object implements the MerchantUpdateMerchantInput interface.
 */
export function instanceOfMerchantUpdateMerchantInput(value: object): boolean {
  const isInstance = true;

  return isInstance;
}

export function MerchantUpdateMerchantInputFromJSON(json: any): MerchantUpdateMerchantInput {
  return MerchantUpdateMerchantInputFromJSONTyped(json, false);
}

export function MerchantUpdateMerchantInputFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): MerchantUpdateMerchantInput {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    prepareTimeEstimateMinutes: !exists(json, 'prepareTimeEstimateMinutes')
      ? undefined
      : json['prepareTimeEstimateMinutes'],
    autoAcceptsTabletOrders: !exists(json, 'autoAcceptsTabletOrders')
      ? undefined
      : json['autoAcceptsTabletOrders'],
    email: !exists(json, 'email') ? undefined : json['email'],
    sendNewOrderEmail: !exists(json, 'sendNewOrderEmail') ? undefined : json['sendNewOrderEmail'],
  };
}

export function MerchantUpdateMerchantInputToJSON(value?: MerchantUpdateMerchantInput | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    prepareTimeEstimateMinutes: value.prepareTimeEstimateMinutes,
    autoAcceptsTabletOrders: value.autoAcceptsTabletOrders,
    email: value.email,
    sendNewOrderEmail: value.sendNewOrderEmail,
  };
}
