/* tslint:disable */
/* eslint-disable */
/**
 * NOSH-API
 * NOSH Backend API
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CartModifierGroupMerchantDto } from './CartModifierGroupMerchantDto';
import {
  CartModifierGroupMerchantDtoFromJSON,
  CartModifierGroupMerchantDtoFromJSONTyped,
  CartModifierGroupMerchantDtoToJSON,
} from './CartModifierGroupMerchantDto';

/**
 *
 * @export
 * @interface CartItemMerchantDto
 */
export interface CartItemMerchantDto {
  /**
   *
   * @type {string}
   * @memberof CartItemMerchantDto
   */
  id: string;
  /**
   *
   * @type {number}
   * @memberof CartItemMerchantDto
   */
  quantity: number;
  /**
   *
   * @type {string}
   * @memberof CartItemMerchantDto
   */
  specialInstructions: string | null;
  /**
   *
   * @type {string}
   * @memberof CartItemMerchantDto
   */
  catalogItemId: string;
  /**
   *
   * @type {string}
   * @memberof CartItemMerchantDto
   */
  name: string;
  /**
   *
   * @type {number}
   * @memberof CartItemMerchantDto
   */
  price: number;
  /**
   *
   * @type {number}
   * @memberof CartItemMerchantDto
   */
  pointsPrice: number;
  /**
   *
   * @type {number}
   * @memberof CartItemMerchantDto
   */
  total: number;
  /**
   *
   * @type {Array<string>}
   * @memberof CartItemMerchantDto
   */
  images: Array<string>;
  /**
   *
   * @type {Array<CartModifierGroupMerchantDto>}
   * @memberof CartItemMerchantDto
   */
  cartModifierGroups: Array<CartModifierGroupMerchantDto>;
}

/**
 * Check if a given object implements the CartItemMerchantDto interface.
 */
export function instanceOfCartItemMerchantDto(value: object): boolean {
  let isInstance = true;
  isInstance = isInstance && 'id' in value;
  isInstance = isInstance && 'quantity' in value;
  isInstance = isInstance && 'specialInstructions' in value;
  isInstance = isInstance && 'catalogItemId' in value;
  isInstance = isInstance && 'name' in value;
  isInstance = isInstance && 'price' in value;
  isInstance = isInstance && 'pointsPrice' in value;
  isInstance = isInstance && 'total' in value;
  isInstance = isInstance && 'images' in value;
  isInstance = isInstance && 'cartModifierGroups' in value;

  return isInstance;
}

export function CartItemMerchantDtoFromJSON(json: any): CartItemMerchantDto {
  return CartItemMerchantDtoFromJSONTyped(json, false);
}

export function CartItemMerchantDtoFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): CartItemMerchantDto {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    id: json['id'],
    quantity: json['quantity'],
    specialInstructions: json['specialInstructions'],
    catalogItemId: json['catalogItemId'],
    name: json['name'],
    price: json['price'],
    pointsPrice: json['pointsPrice'],
    total: json['total'],
    images: json['images'],
    cartModifierGroups: (json['cartModifierGroups'] as Array<any>).map(
      CartModifierGroupMerchantDtoFromJSON,
    ),
  };
}

export function CartItemMerchantDtoToJSON(value?: CartItemMerchantDto | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    id: value.id,
    quantity: value.quantity,
    specialInstructions: value.specialInstructions,
    catalogItemId: value.catalogItemId,
    name: value.name,
    price: value.price,
    pointsPrice: value.pointsPrice,
    total: value.total,
    images: value.images,
    cartModifierGroups: (value.cartModifierGroups as Array<any>).map(
      CartModifierGroupMerchantDtoToJSON,
    ),
  };
}
