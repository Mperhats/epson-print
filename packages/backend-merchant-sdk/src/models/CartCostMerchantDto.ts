/* tslint:disable */
/* eslint-disable */
/**
 * NOSH-API
 * NOSH Backend API
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CartFeeMerchantDto } from './CartFeeMerchantDto';
import {
  CartFeeMerchantDtoFromJSON,
  CartFeeMerchantDtoFromJSONTyped,
  CartFeeMerchantDtoToJSON,
} from './CartFeeMerchantDto';

/**
 *
 * @export
 * @interface CartCostMerchantDto
 */
export interface CartCostMerchantDto {
  /**
   *
   * @type {number}
   * @memberof CartCostMerchantDto
   */
  subtotalAmount: number;
  /**
   *
   * @type {number}
   * @memberof CartCostMerchantDto
   */
  totalAmount: number;
  /**
   *
   * @type {number}
   * @memberof CartCostMerchantDto
   */
  totalFeesAmount: number;
  /**
   *
   * @type {number}
   * @memberof CartCostMerchantDto
   */
  deliveryFeesAmount: number;
  /**
   *
   * @type {number}
   * @memberof CartCostMerchantDto
   */
  courierTipsAmount: number;
  /**
   *
   * @type {Array<CartFeeMerchantDto>}
   * @memberof CartCostMerchantDto
   */
  fees: Array<CartFeeMerchantDto>;
}

/**
 * Check if a given object implements the CartCostMerchantDto interface.
 */
export function instanceOfCartCostMerchantDto(value: object): boolean {
  let isInstance = true;
  isInstance = isInstance && 'subtotalAmount' in value;
  isInstance = isInstance && 'totalAmount' in value;
  isInstance = isInstance && 'totalFeesAmount' in value;
  isInstance = isInstance && 'deliveryFeesAmount' in value;
  isInstance = isInstance && 'courierTipsAmount' in value;
  isInstance = isInstance && 'fees' in value;

  return isInstance;
}

export function CartCostMerchantDtoFromJSON(json: any): CartCostMerchantDto {
  return CartCostMerchantDtoFromJSONTyped(json, false);
}

export function CartCostMerchantDtoFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): CartCostMerchantDto {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    subtotalAmount: json['subtotalAmount'],
    totalAmount: json['totalAmount'],
    totalFeesAmount: json['totalFeesAmount'],
    deliveryFeesAmount: json['deliveryFeesAmount'],
    courierTipsAmount: json['courierTipsAmount'],
    fees: (json['fees'] as Array<any>).map(CartFeeMerchantDtoFromJSON),
  };
}

export function CartCostMerchantDtoToJSON(value?: CartCostMerchantDto | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    subtotalAmount: value.subtotalAmount,
    totalAmount: value.totalAmount,
    totalFeesAmount: value.totalFeesAmount,
    deliveryFeesAmount: value.deliveryFeesAmount,
    courierTipsAmount: value.courierTipsAmount,
    fees: (value.fees as Array<any>).map(CartFeeMerchantDtoToJSON),
  };
}
