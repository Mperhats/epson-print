/* tslint:disable */
/* eslint-disable */
/**
 * NOSH-API
 * NOSH Backend API
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 *
 * @export
 * @interface OrderSubmitEventMerchantInput
 */
export interface OrderSubmitEventMerchantInput {
  /**
   *
   * @type {string}
   * @memberof OrderSubmitEventMerchantInput
   */
  orderId: string;
  /**
   *
   * @type {string}
   * @memberof OrderSubmitEventMerchantInput
   */
  eventType: OrderSubmitEventMerchantInputEventTypeEnum;
  /**
   *
   * @type {string}
   * @memberof OrderSubmitEventMerchantInput
   */
  message?: string;
  /**
   *
   * @type {string}
   * @memberof OrderSubmitEventMerchantInput
   */
  prepareTimeEstimate?: string | null;
}

/**
 * @export
 */
export const OrderSubmitEventMerchantInputEventTypeEnum = {
  Created: 'CREATED',
  NewOrder: 'NEW_ORDER',
  Confirmed: 'CONFIRMED',
  Canceled: 'CANCELED',
  Rejected: 'REJECTED',
  Fulfilled: 'FULFILLED',
  PaymentFailed: 'PAYMENT_FAILED',
  Prepared: 'PREPARED',
  PickedUp: 'PICKED_UP',
  FailedToCreate: 'FAILED_TO_CREATE',
  Failed: 'FAILED',
  Closed: 'CLOSED',
} as const;
export type OrderSubmitEventMerchantInputEventTypeEnum =
  (typeof OrderSubmitEventMerchantInputEventTypeEnum)[keyof typeof OrderSubmitEventMerchantInputEventTypeEnum];

/**
 * Check if a given object implements the OrderSubmitEventMerchantInput interface.
 */
export function instanceOfOrderSubmitEventMerchantInput(value: object): boolean {
  let isInstance = true;
  isInstance = isInstance && 'orderId' in value;
  isInstance = isInstance && 'eventType' in value;

  return isInstance;
}

export function OrderSubmitEventMerchantInputFromJSON(json: any): OrderSubmitEventMerchantInput {
  return OrderSubmitEventMerchantInputFromJSONTyped(json, false);
}

export function OrderSubmitEventMerchantInputFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): OrderSubmitEventMerchantInput {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    orderId: json['orderId'],
    eventType: json['eventType'],
    message: !exists(json, 'message') ? undefined : json['message'],
    prepareTimeEstimate: !exists(json, 'prepareTimeEstimate')
      ? undefined
      : json['prepareTimeEstimate'],
  };
}

export function OrderSubmitEventMerchantInputToJSON(
  value?: OrderSubmitEventMerchantInput | null,
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    orderId: value.orderId,
    eventType: value.eventType,
    message: value.message,
    prepareTimeEstimate: value.prepareTimeEstimate,
  };
}
