/* tslint:disable */
/* eslint-disable */
/**
 * NOSH-API
 * NOSH Backend API
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 *
 * @export
 * @interface MerchantPartialMerchantDto
 */
export interface MerchantPartialMerchantDto {
  /**
   *
   * @type {string}
   * @memberof MerchantPartialMerchantDto
   */
  id: string;
  /**
   *
   * @type {string}
   * @memberof MerchantPartialMerchantDto
   */
  name: string;
  /**
   *
   * @type {string}
   * @memberof MerchantPartialMerchantDto
   */
  email: string | null;
  /**
   *
   * @type {string}
   * @memberof MerchantPartialMerchantDto
   */
  timezone: string;
  /**
   *
   * @type {string}
   * @memberof MerchantPartialMerchantDto
   */
  inactiveUntil: string | null;
  /**
   *
   * @type {string}
   * @memberof MerchantPartialMerchantDto
   */
  addressLine1: string;
  /**
   *
   * @type {string}
   * @memberof MerchantPartialMerchantDto
   */
  addressLine2?: string | null;
  /**
   *
   * @type {string}
   * @memberof MerchantPartialMerchantDto
   */
  locality: string;
  /**
   *
   * @type {string}
   * @memberof MerchantPartialMerchantDto
   */
  administrativeDistrictLevel1: string;
  /**
   *
   * @type {string}
   * @memberof MerchantPartialMerchantDto
   */
  postalCode: string;
  /**
   *
   * @type {string}
   * @memberof MerchantPartialMerchantDto
   */
  country: string;
  /**
   *
   * @type {number}
   * @memberof MerchantPartialMerchantDto
   */
  prepareTimeEstimateMinutes: number;
  /**
   *
   * @type {boolean}
   * @memberof MerchantPartialMerchantDto
   */
  autoAcceptsTabletOrders: boolean;
  /**
   *
   * @type {string}
   * @memberof MerchantPartialMerchantDto
   */
  userEmail: string;
  /**
   *
   * @type {boolean}
   * @memberof MerchantPartialMerchantDto
   */
  doesAllowScheduledOrders: boolean;
  /**
   *
   * @type {boolean}
   * @memberof MerchantPartialMerchantDto
   */
  sendNewOrderEmail: boolean;
  /**
   *
   * @type {boolean}
   * @memberof MerchantPartialMerchantDto
   */
  open: boolean;
}

/**
 * Check if a given object implements the MerchantPartialMerchantDto interface.
 */
export function instanceOfMerchantPartialMerchantDto(value: object): boolean {
  let isInstance = true;
  isInstance = isInstance && 'id' in value;
  isInstance = isInstance && 'name' in value;
  isInstance = isInstance && 'email' in value;
  isInstance = isInstance && 'timezone' in value;
  isInstance = isInstance && 'inactiveUntil' in value;
  isInstance = isInstance && 'addressLine1' in value;
  isInstance = isInstance && 'locality' in value;
  isInstance = isInstance && 'administrativeDistrictLevel1' in value;
  isInstance = isInstance && 'postalCode' in value;
  isInstance = isInstance && 'country' in value;
  isInstance = isInstance && 'prepareTimeEstimateMinutes' in value;
  isInstance = isInstance && 'autoAcceptsTabletOrders' in value;
  isInstance = isInstance && 'userEmail' in value;
  isInstance = isInstance && 'doesAllowScheduledOrders' in value;
  isInstance = isInstance && 'sendNewOrderEmail' in value;
  isInstance = isInstance && 'open' in value;

  return isInstance;
}

export function MerchantPartialMerchantDtoFromJSON(json: any): MerchantPartialMerchantDto {
  return MerchantPartialMerchantDtoFromJSONTyped(json, false);
}

export function MerchantPartialMerchantDtoFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): MerchantPartialMerchantDto {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    id: json['id'],
    name: json['name'],
    email: json['email'],
    timezone: json['timezone'],
    inactiveUntil: json['inactiveUntil'],
    addressLine1: json['addressLine1'],
    addressLine2: !exists(json, 'addressLine2') ? undefined : json['addressLine2'],
    locality: json['locality'],
    administrativeDistrictLevel1: json['administrativeDistrictLevel1'],
    postalCode: json['postalCode'],
    country: json['country'],
    prepareTimeEstimateMinutes: json['prepareTimeEstimateMinutes'],
    autoAcceptsTabletOrders: json['autoAcceptsTabletOrders'],
    userEmail: json['userEmail'],
    doesAllowScheduledOrders: json['doesAllowScheduledOrders'],
    sendNewOrderEmail: json['sendNewOrderEmail'],
    open: json['open'],
  };
}

export function MerchantPartialMerchantDtoToJSON(value?: MerchantPartialMerchantDto | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    id: value.id,
    name: value.name,
    email: value.email,
    timezone: value.timezone,
    inactiveUntil: value.inactiveUntil,
    addressLine1: value.addressLine1,
    addressLine2: value.addressLine2,
    locality: value.locality,
    administrativeDistrictLevel1: value.administrativeDistrictLevel1,
    postalCode: value.postalCode,
    country: value.country,
    prepareTimeEstimateMinutes: value.prepareTimeEstimateMinutes,
    autoAcceptsTabletOrders: value.autoAcceptsTabletOrders,
    userEmail: value.userEmail,
    doesAllowScheduledOrders: value.doesAllowScheduledOrders,
    sendNewOrderEmail: value.sendNewOrderEmail,
    open: value.open,
  };
}
