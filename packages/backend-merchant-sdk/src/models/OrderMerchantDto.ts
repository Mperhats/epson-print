/* tslint:disable */
/* eslint-disable */
/**
 * NOSH-API
 * NOSH Backend API
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CartCostMerchantDto } from './CartCostMerchantDto';
import {
  CartCostMerchantDtoFromJSON,
  CartCostMerchantDtoFromJSONTyped,
  CartCostMerchantDtoToJSON,
} from './CartCostMerchantDto';
import type { CartItemMerchantDto } from './CartItemMerchantDto';
import {
  CartItemMerchantDtoFromJSON,
  CartItemMerchantDtoFromJSONTyped,
  CartItemMerchantDtoToJSON,
} from './CartItemMerchantDto';
import type { CustomerMerchantDto } from './CustomerMerchantDto';
import {
  CustomerMerchantDtoFromJSON,
  CustomerMerchantDtoFromJSONTyped,
  CustomerMerchantDtoToJSON,
} from './CustomerMerchantDto';
import type { DateTimeDto } from './DateTimeDto';
import { DateTimeDtoFromJSON, DateTimeDtoFromJSONTyped, DateTimeDtoToJSON } from './DateTimeDto';
import type { OrderAddressMerchantDto } from './OrderAddressMerchantDto';
import {
  OrderAddressMerchantDtoFromJSON,
  OrderAddressMerchantDtoFromJSONTyped,
  OrderAddressMerchantDtoToJSON,
} from './OrderAddressMerchantDto';
import type { OrderDeliveryInfoMerchantDto } from './OrderDeliveryInfoMerchantDto';
import {
  OrderDeliveryInfoMerchantDtoFromJSON,
  OrderDeliveryInfoMerchantDtoFromJSONTyped,
  OrderDeliveryInfoMerchantDtoToJSON,
} from './OrderDeliveryInfoMerchantDto';
import type { OrderMerchantInfoMerchantDto } from './OrderMerchantInfoMerchantDto';
import {
  OrderMerchantInfoMerchantDtoFromJSON,
  OrderMerchantInfoMerchantDtoFromJSONTyped,
  OrderMerchantInfoMerchantDtoToJSON,
} from './OrderMerchantInfoMerchantDto';
import type { OrderSummaryItemMerchantDto } from './OrderSummaryItemMerchantDto';
import {
  OrderSummaryItemMerchantDtoFromJSON,
  OrderSummaryItemMerchantDtoFromJSONTyped,
  OrderSummaryItemMerchantDtoToJSON,
} from './OrderSummaryItemMerchantDto';

/**
 *
 * @export
 * @interface OrderMerchantDto
 */
export interface OrderMerchantDto {
  /**
   *
   * @type {string}
   * @memberof OrderMerchantDto
   */
  id: string;
  /**
   *
   * @type {string}
   * @memberof OrderMerchantDto
   */
  readableId?: string | null;
  /**
   *
   * @type {string}
   * @memberof OrderMerchantDto
   */
  createdAt?: string;
  /**
   *
   * @type {CustomerMerchantDto}
   * @memberof OrderMerchantDto
   */
  customer?: CustomerMerchantDto;
  /**
   *
   * @type {OrderAddressMerchantDto}
   * @memberof OrderMerchantDto
   */
  customerAddress?: OrderAddressMerchantDto;
  /**
   *
   * @type {OrderMerchantInfoMerchantDto}
   * @memberof OrderMerchantDto
   */
  merchant?: OrderMerchantInfoMerchantDto;
  /**
   *
   * @type {OrderDeliveryInfoMerchantDto}
   * @memberof OrderMerchantDto
   */
  deliveryInformation?: OrderDeliveryInfoMerchantDto;
  /**
   *
   * @type {CartCostMerchantDto}
   * @memberof OrderMerchantDto
   */
  cost?: CartCostMerchantDto;
  /**
   *
   * @type {Array<CartItemMerchantDto>}
   * @memberof OrderMerchantDto
   */
  cartItems?: Array<CartItemMerchantDto>;
  /**
   *
   * @type {string}
   * @memberof OrderMerchantDto
   */
  orderNotes?: string | null;
  /**
   *
   * @type {string}
   * @memberof OrderMerchantDto
   */
  fulfillmentMode: OrderMerchantDtoFulfillmentModeEnum;
  /**
   *
   * @type {string}
   * @memberof OrderMerchantDto
   */
  status: OrderMerchantDtoStatusEnum;
  /**
   *
   * @type {string}
   * @memberof OrderMerchantDto
   */
  preparationTimeEstimate?: string | null;
  /**
   *
   * @type {Array<OrderSummaryItemMerchantDto>}
   * @memberof OrderMerchantDto
   */
  orderSummaryItems: Array<OrderSummaryItemMerchantDto>;
  /**
   *
   * @type {DateTimeDto}
   * @memberof OrderMerchantDto
   */
  scheduledAtTime?: DateTimeDto;
  /**
   * Describes how much time is left for a scheduled order to become active.
   * @type {string}
   * @memberof OrderMerchantDto
   */
  timeRemainingToBecomeActive?: string;
}

/**
 * @export
 */
export const OrderMerchantDtoFulfillmentModeEnum = {
  Pickup: 'PICKUP',
  Delivery: 'DELIVERY',
} as const;
export type OrderMerchantDtoFulfillmentModeEnum =
  (typeof OrderMerchantDtoFulfillmentModeEnum)[keyof typeof OrderMerchantDtoFulfillmentModeEnum];

/**
 * @export
 */
export const OrderMerchantDtoStatusEnum = {
  Scheduled: 'SCHEDULED',
  NewOrder: 'NEW_ORDER',
  Confirmed: 'CONFIRMED',
  PickedUp: 'PICKED_UP',
  Canceled: 'CANCELED',
  Fulfilled: 'FULFILLED',
  Failed: 'FAILED',
  Prepared: 'PREPARED',
  Rejected: 'REJECTED',
  FailedToCreate: 'FAILED_TO_CREATE',
  Unknown: 'UNKNOWN',
  Closed: 'CLOSED',
} as const;
export type OrderMerchantDtoStatusEnum =
  (typeof OrderMerchantDtoStatusEnum)[keyof typeof OrderMerchantDtoStatusEnum];

/**
 * Check if a given object implements the OrderMerchantDto interface.
 */
export function instanceOfOrderMerchantDto(value: object): boolean {
  let isInstance = true;
  isInstance = isInstance && 'id' in value;
  isInstance = isInstance && 'fulfillmentMode' in value;
  isInstance = isInstance && 'status' in value;
  isInstance = isInstance && 'orderSummaryItems' in value;

  return isInstance;
}

export function OrderMerchantDtoFromJSON(json: any): OrderMerchantDto {
  return OrderMerchantDtoFromJSONTyped(json, false);
}

export function OrderMerchantDtoFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): OrderMerchantDto {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    id: json['id'],
    readableId: !exists(json, 'readableId') ? undefined : json['readableId'],
    createdAt: !exists(json, 'createdAt') ? undefined : json['createdAt'],
    customer: !exists(json, 'customer') ? undefined : CustomerMerchantDtoFromJSON(json['customer']),
    customerAddress: !exists(json, 'customerAddress')
      ? undefined
      : OrderAddressMerchantDtoFromJSON(json['customerAddress']),
    merchant: !exists(json, 'merchant')
      ? undefined
      : OrderMerchantInfoMerchantDtoFromJSON(json['merchant']),
    deliveryInformation: !exists(json, 'deliveryInformation')
      ? undefined
      : OrderDeliveryInfoMerchantDtoFromJSON(json['deliveryInformation']),
    cost: !exists(json, 'cost') ? undefined : CartCostMerchantDtoFromJSON(json['cost']),
    cartItems: !exists(json, 'cartItems')
      ? undefined
      : (json['cartItems'] as Array<any>).map(CartItemMerchantDtoFromJSON),
    orderNotes: !exists(json, 'orderNotes') ? undefined : json['orderNotes'],
    fulfillmentMode: json['fulfillmentMode'],
    status: json['status'],
    preparationTimeEstimate: !exists(json, 'preparationTimeEstimate')
      ? undefined
      : json['preparationTimeEstimate'],
    orderSummaryItems: (json['orderSummaryItems'] as Array<any>).map(
      OrderSummaryItemMerchantDtoFromJSON,
    ),
    scheduledAtTime: !exists(json, 'scheduledAtTime')
      ? undefined
      : DateTimeDtoFromJSON(json['scheduledAtTime']),
    timeRemainingToBecomeActive: !exists(json, 'timeRemainingToBecomeActive')
      ? undefined
      : json['timeRemainingToBecomeActive'],
  };
}

export function OrderMerchantDtoToJSON(value?: OrderMerchantDto | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    id: value.id,
    readableId: value.readableId,
    createdAt: value.createdAt,
    customer: CustomerMerchantDtoToJSON(value.customer),
    customerAddress: OrderAddressMerchantDtoToJSON(value.customerAddress),
    merchant: OrderMerchantInfoMerchantDtoToJSON(value.merchant),
    deliveryInformation: OrderDeliveryInfoMerchantDtoToJSON(value.deliveryInformation),
    cost: CartCostMerchantDtoToJSON(value.cost),
    cartItems:
      value.cartItems === undefined
        ? undefined
        : (value.cartItems as Array<any>).map(CartItemMerchantDtoToJSON),
    orderNotes: value.orderNotes,
    fulfillmentMode: value.fulfillmentMode,
    status: value.status,
    preparationTimeEstimate: value.preparationTimeEstimate,
    orderSummaryItems: (value.orderSummaryItems as Array<any>).map(
      OrderSummaryItemMerchantDtoToJSON,
    ),
    scheduledAtTime: DateTimeDtoToJSON(value.scheduledAtTime),
    timeRemainingToBecomeActive: value.timeRemainingToBecomeActive,
  };
}
