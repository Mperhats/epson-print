/* tslint:disable */
/* eslint-disable */
/**
 * NOSH-API
 * NOSH Backend API
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 *
 * @export
 * @interface AblyTokenDto
 */
export interface AblyTokenDto {
  /**
   *
   * @type {string}
   * @memberof AblyTokenDto
   */
  keyName: string;
  /**
   *
   * @type {string}
   * @memberof AblyTokenDto
   */
  clientId?: string;
  /**
   *
   * @type {string}
   * @memberof AblyTokenDto
   */
  capability: string;
  /**
   *
   * @type {number}
   * @memberof AblyTokenDto
   */
  timestamp: number;
  /**
   *
   * @type {string}
   * @memberof AblyTokenDto
   */
  nonce: string;
  /**
   *
   * @type {string}
   * @memberof AblyTokenDto
   */
  mac: string;
}

/**
 * Check if a given object implements the AblyTokenDto interface.
 */
export function instanceOfAblyTokenDto(value: object): boolean {
  let isInstance = true;
  isInstance = isInstance && 'keyName' in value;
  isInstance = isInstance && 'capability' in value;
  isInstance = isInstance && 'timestamp' in value;
  isInstance = isInstance && 'nonce' in value;
  isInstance = isInstance && 'mac' in value;

  return isInstance;
}

export function AblyTokenDtoFromJSON(json: any): AblyTokenDto {
  return AblyTokenDtoFromJSONTyped(json, false);
}

export function AblyTokenDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): AblyTokenDto {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    keyName: json['keyName'],
    clientId: !exists(json, 'clientId') ? undefined : json['clientId'],
    capability: json['capability'],
    timestamp: json['timestamp'],
    nonce: json['nonce'],
    mac: json['mac'],
  };
}

export function AblyTokenDtoToJSON(value?: AblyTokenDto | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    keyName: value.keyName,
    clientId: value.clientId,
    capability: value.capability,
    timestamp: value.timestamp,
    nonce: value.nonce,
    mac: value.mac,
  };
}
