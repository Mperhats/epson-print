/* tslint:disable */
/* eslint-disable */
/**
 * NOSH-API
 * NOSH Backend API
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 *
 * @export
 * @interface ApiException
 */
export interface ApiException {
  /**
   *
   * @type {string}
   * @memberof ApiException
   */
  code: ApiExceptionCodeEnum;
  /**
   *
   * @type {string}
   * @memberof ApiException
   */
  message: string;
  /**
   *
   * @type {number}
   * @memberof ApiException
   */
  statusCode: number;
}

/**
 * @export
 */
export const ApiExceptionCodeEnum = {
  UniqueConstraint: 'UNIQUE_CONSTRAINT',
  VerificationCode: 'VERIFICATION_CODE',
  VerificationLimit: 'VERIFICATION_LIMIT',
  NotFound: 'NOT_FOUND',
  OrderExists: 'ORDER_EXISTS',
  CreateFailed: 'CREATE_FAILED',
  BadRequest: 'BAD_REQUEST',
  Unknown: 'UNKNOWN',
  NotAllowed: 'NOT_ALLOWED',
  Unauthorized: 'UNAUTHORIZED',
  JwtExpired: 'JWT_EXPIRED',
  Forbidden: 'FORBIDDEN',
  UserExists: 'USER_EXISTS',
  CustomerExists: 'CUSTOMER_EXISTS',
  UserNotFound: 'USER_NOT_FOUND',
  MissingData: 'MISSING_DATA',
  InvalidData: 'INVALID_DATA',
  IntegrationError: 'INTEGRATION_ERROR',
  CartExists: 'CART_EXISTS',
  CatalogItemUnavailable: 'CATALOG_ITEM_UNAVAILABLE',
  NotEnoughPointsInBalance: 'NOT_ENOUGH_POINTS_IN_BALANCE',
  NoCouriersAvailable: 'NO_COURIERS_AVAILABLE',
  MerchantClosed: 'MERCHANT_CLOSED',
  MissingPaymentInfo: 'MISSING_PAYMENT_INFO',
  PushNotificationDeliveryFailed: 'PUSH_NOTIFICATION_DELIVERY_FAILED',
  InternalError: 'INTERNAL_ERROR',
  MenuIngestionError: 'MENU_INGESTION_ERROR',
  InconsistentData: 'INCONSISTENT_DATA',
  ScheduledJobFailure: 'SCHEDULED_JOB_FAILURE',
  RecoverableStripeWebhookError: 'RECOVERABLE_STRIPE_WEBHOOK_ERROR',
  UnrecoverableStripeWebhookError: 'UNRECOVERABLE_STRIPE_WEBHOOK_ERROR',
  BlockchainTransactionError: 'BLOCKCHAIN_TRANSACTION_ERROR',
  BlockchainContractReversionError: 'BLOCKCHAIN_CONTRACT_REVERSION_ERROR',
  PaymentCreationError: 'PAYMENT_CREATION_ERROR',
  WalletAddressNotFound: 'WALLET_ADDRESS_NOT_FOUND',
} as const;
export type ApiExceptionCodeEnum = (typeof ApiExceptionCodeEnum)[keyof typeof ApiExceptionCodeEnum];

/**
 * Check if a given object implements the ApiException interface.
 */
export function instanceOfApiException(value: object): boolean {
  let isInstance = true;
  isInstance = isInstance && 'code' in value;
  isInstance = isInstance && 'message' in value;
  isInstance = isInstance && 'statusCode' in value;

  return isInstance;
}

export function ApiExceptionFromJSON(json: any): ApiException {
  return ApiExceptionFromJSONTyped(json, false);
}

export function ApiExceptionFromJSONTyped(json: any, ignoreDiscriminator: boolean): ApiException {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    code: json['code'],
    message: json['message'],
    statusCode: json['statusCode'],
  };
}

export function ApiExceptionToJSON(value?: ApiException | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    code: value.code,
    message: value.message,
    statusCode: value.statusCode,
  };
}
