/* tslint:disable */
/* eslint-disable */
/**
 * NOSH-API
 * NOSH Backend API
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 *
 * @export
 * @interface CatalogItemMerchantDto
 */
export interface CatalogItemMerchantDto {
  /**
   *
   * @type {string}
   * @memberof CatalogItemMerchantDto
   */
  id: string;
  /**
   *
   * @type {string}
   * @memberof CatalogItemMerchantDto
   */
  name: string;
  /**
   *
   * @type {number}
   * @memberof CatalogItemMerchantDto
   */
  price: number;
  /**
   *
   * @type {Array<string>}
   * @memberof CatalogItemMerchantDto
   */
  images: Array<string>;
  /**
   *
   * @type {string}
   * @memberof CatalogItemMerchantDto
   */
  suspendedUntil: string | null;
}

/**
 * Check if a given object implements the CatalogItemMerchantDto interface.
 */
export function instanceOfCatalogItemMerchantDto(value: object): boolean {
  let isInstance = true;
  isInstance = isInstance && 'id' in value;
  isInstance = isInstance && 'name' in value;
  isInstance = isInstance && 'price' in value;
  isInstance = isInstance && 'images' in value;
  isInstance = isInstance && 'suspendedUntil' in value;

  return isInstance;
}

export function CatalogItemMerchantDtoFromJSON(json: any): CatalogItemMerchantDto {
  return CatalogItemMerchantDtoFromJSONTyped(json, false);
}

export function CatalogItemMerchantDtoFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): CatalogItemMerchantDto {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    id: json['id'],
    name: json['name'],
    price: json['price'],
    images: json['images'],
    suspendedUntil: json['suspendedUntil'],
  };
}

export function CatalogItemMerchantDtoToJSON(value?: CatalogItemMerchantDto | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    id: value.id,
    name: value.name,
    price: value.price,
    images: value.images,
    suspendedUntil: value.suspendedUntil,
  };
}
