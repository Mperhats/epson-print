/* tslint:disable */
/* eslint-disable */
/**
 * NOSH-API
 * NOSH Backend API
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 *
 * @export
 * @interface CustomerAddressMerchantDto
 */
export interface CustomerAddressMerchantDto {
  /**
   *
   * @type {string}
   * @memberof CustomerAddressMerchantDto
   */
  id: string;
  /**
   *
   * @type {string}
   * @memberof CustomerAddressMerchantDto
   */
  addressLine1: string;
  /**
   *
   * @type {string}
   * @memberof CustomerAddressMerchantDto
   */
  addressLine2?: string | null;
  /**
   *
   * @type {string}
   * @memberof CustomerAddressMerchantDto
   */
  dropOffOption: CustomerAddressMerchantDtoDropOffOptionEnum;
  /**
   *
   * @type {string}
   * @memberof CustomerAddressMerchantDto
   */
  locality: string;
  /**
   *
   * @type {string}
   * @memberof CustomerAddressMerchantDto
   */
  administrativeDistrictLevel1: string;
  /**
   *
   * @type {string}
   * @memberof CustomerAddressMerchantDto
   */
  postalCode: string;
  /**
   *
   * @type {string}
   * @memberof CustomerAddressMerchantDto
   */
  deliveryNotes: string;
  /**
   *
   * @type {string}
   * @memberof CustomerAddressMerchantDto
   */
  customerId: string;
  /**
   *
   * @type {boolean}
   * @memberof CustomerAddressMerchantDto
   */
  isDefault: boolean;
  /**
   *
   * @type {string}
   * @memberof CustomerAddressMerchantDto
   */
  latitude: string;
  /**
   *
   * @type {string}
   * @memberof CustomerAddressMerchantDto
   */
  longitude: string;
}

/**
 * @export
 */
export const CustomerAddressMerchantDtoDropOffOptionEnum = {
  MeetAtMyDoor: 'MEET_AT_MY_DOOR',
  LeaveAtMyDoor: 'LEAVE_AT_MY_DOOR',
} as const;
export type CustomerAddressMerchantDtoDropOffOptionEnum =
  (typeof CustomerAddressMerchantDtoDropOffOptionEnum)[keyof typeof CustomerAddressMerchantDtoDropOffOptionEnum];

/**
 * Check if a given object implements the CustomerAddressMerchantDto interface.
 */
export function instanceOfCustomerAddressMerchantDto(value: object): boolean {
  let isInstance = true;
  isInstance = isInstance && 'id' in value;
  isInstance = isInstance && 'addressLine1' in value;
  isInstance = isInstance && 'dropOffOption' in value;
  isInstance = isInstance && 'locality' in value;
  isInstance = isInstance && 'administrativeDistrictLevel1' in value;
  isInstance = isInstance && 'postalCode' in value;
  isInstance = isInstance && 'deliveryNotes' in value;
  isInstance = isInstance && 'customerId' in value;
  isInstance = isInstance && 'isDefault' in value;
  isInstance = isInstance && 'latitude' in value;
  isInstance = isInstance && 'longitude' in value;

  return isInstance;
}

export function CustomerAddressMerchantDtoFromJSON(json: any): CustomerAddressMerchantDto {
  return CustomerAddressMerchantDtoFromJSONTyped(json, false);
}

export function CustomerAddressMerchantDtoFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): CustomerAddressMerchantDto {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    id: json['id'],
    addressLine1: json['addressLine1'],
    addressLine2: !exists(json, 'addressLine2') ? undefined : json['addressLine2'],
    dropOffOption: json['dropOffOption'],
    locality: json['locality'],
    administrativeDistrictLevel1: json['administrativeDistrictLevel1'],
    postalCode: json['postalCode'],
    deliveryNotes: json['deliveryNotes'],
    customerId: json['customerId'],
    isDefault: json['isDefault'],
    latitude: json['latitude'],
    longitude: json['longitude'],
  };
}

export function CustomerAddressMerchantDtoToJSON(value?: CustomerAddressMerchantDto | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    id: value.id,
    addressLine1: value.addressLine1,
    addressLine2: value.addressLine2,
    dropOffOption: value.dropOffOption,
    locality: value.locality,
    administrativeDistrictLevel1: value.administrativeDistrictLevel1,
    postalCode: value.postalCode,
    deliveryNotes: value.deliveryNotes,
    customerId: value.customerId,
    isDefault: value.isDefault,
    latitude: value.latitude,
    longitude: value.longitude,
  };
}
