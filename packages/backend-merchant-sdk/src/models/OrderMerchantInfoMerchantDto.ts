/* tslint:disable */
/* eslint-disable */
/**
 * NOSH-API
 * NOSH Backend API
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 *
 * @export
 * @interface OrderMerchantInfoMerchantDto
 */
export interface OrderMerchantInfoMerchantDto {
  /**
   *
   * @type {string}
   * @memberof OrderMerchantInfoMerchantDto
   */
  id: string;
  /**
   *
   * @type {string}
   * @memberof OrderMerchantInfoMerchantDto
   */
  name: string;
  /**
   *
   * @type {string}
   * @memberof OrderMerchantInfoMerchantDto
   */
  phone: string;
  /**
   *
   * @type {string}
   * @memberof OrderMerchantInfoMerchantDto
   */
  email: string | null;
  /**
   *
   * @type {string}
   * @memberof OrderMerchantInfoMerchantDto
   */
  logo?: string | null;
  /**
   *
   * @type {string}
   * @memberof OrderMerchantInfoMerchantDto
   */
  addressLine1: string;
  /**
   *
   * @type {string}
   * @memberof OrderMerchantInfoMerchantDto
   */
  addressLine2?: string | null;
  /**
   *
   * @type {string}
   * @memberof OrderMerchantInfoMerchantDto
   */
  locality: string;
  /**
   *
   * @type {string}
   * @memberof OrderMerchantInfoMerchantDto
   */
  administrativeDistrictLevel1: string;
  /**
   *
   * @type {string}
   * @memberof OrderMerchantInfoMerchantDto
   */
  postalCode: string;
  /**
   *
   * @type {number}
   * @memberof OrderMerchantInfoMerchantDto
   */
  latitude: number;
  /**
   *
   * @type {number}
   * @memberof OrderMerchantInfoMerchantDto
   */
  longitude: number;
}

/**
 * Check if a given object implements the OrderMerchantInfoMerchantDto interface.
 */
export function instanceOfOrderMerchantInfoMerchantDto(value: object): boolean {
  let isInstance = true;
  isInstance = isInstance && 'id' in value;
  isInstance = isInstance && 'name' in value;
  isInstance = isInstance && 'phone' in value;
  isInstance = isInstance && 'email' in value;
  isInstance = isInstance && 'addressLine1' in value;
  isInstance = isInstance && 'locality' in value;
  isInstance = isInstance && 'administrativeDistrictLevel1' in value;
  isInstance = isInstance && 'postalCode' in value;
  isInstance = isInstance && 'latitude' in value;
  isInstance = isInstance && 'longitude' in value;

  return isInstance;
}

export function OrderMerchantInfoMerchantDtoFromJSON(json: any): OrderMerchantInfoMerchantDto {
  return OrderMerchantInfoMerchantDtoFromJSONTyped(json, false);
}

export function OrderMerchantInfoMerchantDtoFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): OrderMerchantInfoMerchantDto {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    id: json['id'],
    name: json['name'],
    phone: json['phone'],
    email: json['email'],
    logo: !exists(json, 'logo') ? undefined : json['logo'],
    addressLine1: json['addressLine1'],
    addressLine2: !exists(json, 'addressLine2') ? undefined : json['addressLine2'],
    locality: json['locality'],
    administrativeDistrictLevel1: json['administrativeDistrictLevel1'],
    postalCode: json['postalCode'],
    latitude: json['latitude'],
    longitude: json['longitude'],
  };
}

export function OrderMerchantInfoMerchantDtoToJSON(
  value?: OrderMerchantInfoMerchantDto | null,
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    id: value.id,
    name: value.name,
    phone: value.phone,
    email: value.email,
    logo: value.logo,
    addressLine1: value.addressLine1,
    addressLine2: value.addressLine2,
    locality: value.locality,
    administrativeDistrictLevel1: value.administrativeDistrictLevel1,
    postalCode: value.postalCode,
    latitude: value.latitude,
    longitude: value.longitude,
  };
}
